[package]
name = "vl6180"
version = "0.1.0"
edition = "2021"

[lib]
name = "vl6180"
path = "src/lib.rs"

[[bin]]
name = "example"
path = "./src/bin/main.rs"

[features]
default = ["esp32c3"]
esp32 = ["esp-hal/esp32", "esp-backtrace/esp32", "esp-println/esp32"]
esp32s2 = ["esp-hal/esp32s2", "esp-backtrace/esp32s2", "esp-println/esp32s2"]
esp32s3 = ["esp-hal/esp32s3", "esp-backtrace/esp32s3", "esp-println/esp32s3"]
esp32c3 = ["esp-hal/esp32c3", "esp-backtrace/esp32c3", "esp-println/esp32c3"]

# Raspberry Pi Pico
rp-pico = ["rp-hal"]
# Raspberry Pi 4/5 Linux GPIO
rp-linux = ["rppal"]

[dependencies]
esp-backtrace = { version = "0.14.2", features = [
    "esp32c3",
    "exception-handler",
    "panic-handler",
    "println",
]}

rp-hal = { version = "0.0.2", optional = true }        
rppal = { version = "0.14", optional = true }
embedded-hal = "1.0.0"

esp-hal = { version = "0.23.1", features = [
    "esp32c3",
] }
esp-println = { version = "0.12.0", features = ["esp32c3", "log"] }
log = { version = "0.4.21" }
critical-section = "1.2.0"

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1        # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
